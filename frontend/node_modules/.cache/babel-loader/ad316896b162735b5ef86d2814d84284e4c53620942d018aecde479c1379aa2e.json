{"ast":null,"code":"import { headers } from '../../App';\nconst isPostLiked = async postId => {\n  const userId = localStorage.getItem('userId');\n  try {\n    const results = await fetch(`http://localhost/posts/is-post-liked/post${postId}/user${userId}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers\n    });\n    const liked = await results.json();\n    console.log(postId, userId, liked);\n    return liked;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport default isPostLiked;","map":{"version":3,"names":["headers","isPostLiked","postId","userId","localStorage","getItem","results","fetch","method","credentials","liked","json","console","log","err","error"],"sources":["/home/theprocoder/instagram-clone/frontend/src/serverFunctions/posts/isPostLiked.ts"],"sourcesContent":["import { headers } from '../../App';\n\nconst isPostLiked = async (postId: number) => {\n  const userId = localStorage.getItem('userId');\n\n  try {\n    const results = await fetch(\n      `http://localhost/posts/is-post-liked/post${postId}/user${userId}`,\n      {\n        method: 'GET',\n        credentials: 'include',\n        headers,\n      }\n    );\n\n    const liked = await results.json();\n    console.log(postId, userId, liked);\n    return liked;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport default isPostLiked;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AAEnC,MAAMC,WAAW,GAAG,MAAOC,MAAc,IAAK;EAC5C,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7C,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMC,KAAK,CACxB,4CAA2CL,MAAO,QAAOC,MAAO,EAAC,EAClE;MACEK,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MACtBT;IACF,CACF,CAAC;IAED,MAAMU,KAAK,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACX,MAAM,EAAEC,MAAM,EAAEO,KAAK,CAAC;IAClC,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;EACpB;AACF,CAAC;AAED,eAAeb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}