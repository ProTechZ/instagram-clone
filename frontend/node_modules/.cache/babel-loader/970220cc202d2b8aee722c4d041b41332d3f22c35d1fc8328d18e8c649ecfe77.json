{"ast":null,"code":"import { headers } from '../../App';\nimport calculateDateDiff from '../../utils/calculateDateDiff';\nconst signUp = async (firstName, lastName, username, email, birthday, password, confirmPwrd, setError, setShowModal) => {\n  console.log(1);\n  const ref = [{\n    val: firstName,\n    input: document.getElementsByTagName('input')[0]\n  }, {\n    val: lastName,\n    input: document.getElementsByTagName('input')[1]\n  }, {\n    val: username,\n    input: document.getElementsByTagName('input')[2]\n  }, {\n    val: email,\n    input: document.getElementsByTagName('input')[3]\n  }, {\n    val: birthday,\n    input: document.getElementsByTagName('input')[4]\n  }, {\n    val: password,\n    input: document.getElementsByTagName('input')[5]\n  }, {\n    val: confirmPwrd,\n    input: document.getElementsByTagName('input')[6]\n  }];\n  if (password !== confirmPwrd) {\n    setError(\"Passwords don't match\");\n  }\n  console.log(2);\n  for (const entry of ref) {\n    const {\n      val,\n      input\n    } = entry;\n    if (!val) {\n      input.style.borderColor = 'red';\n      setError('Field is required');\n    } else if (val) {\n      input.style.borderColor = '#D8B4FD';\n    }\n  }\n  console.log(3);\n  const bdaySplit = birthday.split('-');\n  const bdayAsDate = new Date(parseInt(bdaySplit[0]), parseInt(bdaySplit[1]) - 1, parseInt(bdaySplit[2]));\n  const userAgeInDays = calculateDateDiff(bdayAsDate);\n\n  // 15 years old\n  if (userAgeInDays < 5479) {\n    setShowModal(true);\n    return;\n  }\n  console.log(4);\n  if (firstName && lastName && username && email && birthday && password && confirmPwrd && password === confirmPwrd) {\n    setError('');\n    try {\n      const results = await fetch('http://localhost/account/signup', {\n        method: 'POST',\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          username,\n          email,\n          birthday,\n          password\n        }),\n        credentials: 'include',\n        headers\n      });\n      const {\n        loggedIn,\n        user,\n        err\n      } = await results.json();\n      if (!loggedIn) {\n        setError(err);\n      } else {\n        setError('');\n        localStorage.setItem('userId', user.user_id);\n        window.location.href = 'http://localhost:3000/';\n      }\n    } catch (err) {\n      setError(err);\n    }\n  }\n};\nexport default signUp;","map":{"version":3,"names":["headers","calculateDateDiff","signUp","firstName","lastName","username","email","birthday","password","confirmPwrd","setError","setShowModal","console","log","ref","val","input","document","getElementsByTagName","entry","style","borderColor","bdaySplit","split","bdayAsDate","Date","parseInt","userAgeInDays","results","fetch","method","body","JSON","stringify","first_name","last_name","credentials","loggedIn","user","err","json","localStorage","setItem","user_id","window","location","href"],"sources":["/home/theprocoder/instagram-clone/frontend/src/serverFunctions/user/signup.ts"],"sourcesContent":["import { headers } from '../../App';\nimport calculateDateDiff from '../../utils/calculateDateDiff';\n\nconst signUp = async (\n  firstName: string,\n  lastName: string,\n  username: string,\n  email: string,\n  birthday: string,\n  password: string,\n  confirmPwrd: string,\n  setError: any,\n  setShowModal: any\n) => {\n  console.log(1);\n\n  const ref = [\n    { val: firstName, input: document.getElementsByTagName('input')[0] },\n    { val: lastName, input: document.getElementsByTagName('input')[1] },\n    { val: username, input: document.getElementsByTagName('input')[2] },\n    { val: email, input: document.getElementsByTagName('input')[3] },\n    { val: birthday, input: document.getElementsByTagName('input')[4] },\n    { val: password, input: document.getElementsByTagName('input')[5] },\n    { val: confirmPwrd, input: document.getElementsByTagName('input')[6] },\n  ];\n\n  if (password !== confirmPwrd) {\n    setError(\"Passwords don't match\");\n  }\n  console.log(2);\n\n  for (const entry of ref) {\n    const { val, input } = entry;\n\n    if (!val) {\n      input.style.borderColor = 'red';\n      setError('Field is required');\n    } else if (val) {\n      input.style.borderColor = '#D8B4FD';\n    }\n  }\n  console.log(3);\n\n  const bdaySplit = birthday.split('-');\n  const bdayAsDate = new Date(\n    parseInt(bdaySplit[0]),\n    parseInt(bdaySplit[1]) - 1,\n    parseInt(bdaySplit[2])\n  );\n\n  const userAgeInDays = calculateDateDiff(bdayAsDate);\n\n  // 15 years old\n  if (userAgeInDays < 5479) {\n    setShowModal(true);\n    return;\n  }\n  console.log(4);\n\n  if (\n    firstName &&\n    lastName &&\n    username &&\n    email &&\n    birthday &&\n    password &&\n    confirmPwrd &&\n    password === confirmPwrd\n  ) {\n    setError('');\n\n    try {\n      const results = await fetch('http://localhost/account/signup', {\n        method: 'POST',\n        body: JSON.stringify({\n          first_name: firstName,\n          last_name: lastName,\n          username,\n          email,\n          birthday,\n          password,\n        }),\n        credentials: 'include',\n        headers,\n      });\n      const { loggedIn, user, err } = await results.json();\n      \n      if (!loggedIn) {\n        setError(err);\n      } else {\n        setError('');\n        localStorage.setItem('userId', user.user_id);\n\n        window.location.href = 'http://localhost:3000/';\n      }\n    } catch (err) {\n      setError(err);\n    }\n  }\n};\n\nexport default signUp;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,OAAOC,iBAAiB,MAAM,+BAA+B;AAE7D,MAAMC,MAAM,GAAG,MAAAA,CACbC,SAAiB,EACjBC,QAAgB,EAChBC,QAAgB,EAChBC,KAAa,EACbC,QAAgB,EAChBC,QAAgB,EAChBC,WAAmB,EACnBC,QAAa,EACbC,YAAiB,KACd;EACHC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAEd,MAAMC,GAAG,GAAG,CACV;IAAEC,GAAG,EAAEZ,SAAS;IAAEa,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EACpE;IAAEH,GAAG,EAAEX,QAAQ;IAAEY,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EACnE;IAAEH,GAAG,EAAEV,QAAQ;IAAEW,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EACnE;IAAEH,GAAG,EAAET,KAAK;IAAEU,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EAChE;IAAEH,GAAG,EAAER,QAAQ;IAAES,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EACnE;IAAEH,GAAG,EAAEP,QAAQ;IAAEQ,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,EACnE;IAAEH,GAAG,EAAEN,WAAW;IAAEO,KAAK,EAAEC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;EAAE,CAAC,CACvE;EAED,IAAIV,QAAQ,KAAKC,WAAW,EAAE;IAC5BC,QAAQ,CAAC,uBAAuB,CAAC;EACnC;EACAE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAEd,KAAK,MAAMM,KAAK,IAAIL,GAAG,EAAE;IACvB,MAAM;MAAEC,GAAG;MAAEC;IAAM,CAAC,GAAGG,KAAK;IAE5B,IAAI,CAACJ,GAAG,EAAE;MACRC,KAAK,CAACI,KAAK,CAACC,WAAW,GAAG,KAAK;MAC/BX,QAAQ,CAAC,mBAAmB,CAAC;IAC/B,CAAC,MAAM,IAAIK,GAAG,EAAE;MACdC,KAAK,CAACI,KAAK,CAACC,WAAW,GAAG,SAAS;IACrC;EACF;EACAT,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAEd,MAAMS,SAAS,GAAGf,QAAQ,CAACgB,KAAK,CAAC,GAAG,CAAC;EACrC,MAAMC,UAAU,GAAG,IAAIC,IAAI,CACzBC,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,EACtBI,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1BI,QAAQ,CAACJ,SAAS,CAAC,CAAC,CAAC,CACvB,CAAC;EAED,MAAMK,aAAa,GAAG1B,iBAAiB,CAACuB,UAAU,CAAC;;EAEnD;EACA,IAAIG,aAAa,GAAG,IAAI,EAAE;IACxBhB,YAAY,CAAC,IAAI,CAAC;IAClB;EACF;EACAC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAEd,IACEV,SAAS,IACTC,QAAQ,IACRC,QAAQ,IACRC,KAAK,IACLC,QAAQ,IACRC,QAAQ,IACRC,WAAW,IACXD,QAAQ,KAAKC,WAAW,EACxB;IACAC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMkB,OAAO,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,UAAU,EAAE/B,SAAS;UACrBgC,SAAS,EAAE/B,QAAQ;UACnBC,QAAQ;UACRC,KAAK;UACLC,QAAQ;UACRC;QACF,CAAC,CAAC;QACF4B,WAAW,EAAE,SAAS;QACtBpC;MACF,CAAC,CAAC;MACF,MAAM;QAAEqC,QAAQ;QAAEC,IAAI;QAAEC;MAAI,CAAC,GAAG,MAAMX,OAAO,CAACY,IAAI,CAAC,CAAC;MAEpD,IAAI,CAACH,QAAQ,EAAE;QACb3B,QAAQ,CAAC6B,GAAG,CAAC;MACf,CAAC,MAAM;QACL7B,QAAQ,CAAC,EAAE,CAAC;QACZ+B,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,OAAO,CAAC;QAE5CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,wBAAwB;MACjD;IACF,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZ7B,QAAQ,CAAC6B,GAAG,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAerC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}