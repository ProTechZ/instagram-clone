{"ast":null,"code":"var _jsxFileName = \"/home/theprocoder/instagram-clone/frontend/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport Navbar from '../components/Navbar';\nimport { useEffect, useState } from 'react';\nimport getAllfollowed from '../serverFunctions/friends/getAllFollowing';\nimport { headers } from '../App';\nimport shuffleArray from '../utils/shuffleArray';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFriendsPost = async followedIds => {\n  const friendsPosts = [];\n  try {\n    for (const friendId of followedIds) {\n      const results = await fetch(`http://localhost/users/${friendId}`, {\n        method: 'GET',\n        credentials: 'include',\n        headers\n      });\n      const {\n        user,\n        posts\n      } = await results.json();\n      const modifiedPosts = posts.map(val => {\n        return {\n          ...val,\n          ...user\n        };\n      });\n      friendsPosts.push(...modifiedPosts);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n  return shuffleArray(friendsPosts);\n};\nconst Home = () => {\n  _s();\n  const [friendsPosts, setFriendsPosts] = useState([]);\n  const userId = parseInt(localStorage.getItem('userId'));\n  useEffect(() => {\n    const fetchData = async () => {\n      const followedIds = await getAllfollowed(userId);\n      const friendsPosts = await getFriendsPost(followedIds);\n      setFriendsPosts(friendsPosts);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-10 my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"These are posts from your friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), friendsPosts.length >= 1 && friendsPosts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          id: post.post_id,\n          avatar: post.avatar,\n          username: post.username,\n          datePosted: post.date_posted,\n          numLikes: post.num_likes,\n          caption: post.caption,\n          image: post.image,\n          comments: ['hi', 'pine me', 'bro tinks hes ihi']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this);\n      }), friendsPosts.length < 1 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Looks like you have no posts! Let's start by making some friends!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GCxmqQLchlMWgEd6uPQoTDDlboU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Navbar","useEffect","useState","getAllfollowed","headers","shuffleArray","Post","jsxDEV","_jsxDEV","getFriendsPost","followedIds","friendsPosts","friendId","results","fetch","method","credentials","user","posts","json","modifiedPosts","map","val","push","err","console","error","Home","_s","setFriendsPosts","userId","parseInt","localStorage","getItem","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","post","id","post_id","avatar","username","datePosted","date_posted","numLikes","num_likes","caption","image","comments","_c","$RefreshReg$"],"sources":["/home/theprocoder/instagram-clone/frontend/src/pages/Home.tsx"],"sourcesContent":["import Navbar from '../components/Navbar';\nimport { useEffect, useState } from 'react';\nimport getAllfollowed from '../serverFunctions/friends/getAllFollowing';\nimport { headers } from '../App';\nimport shuffleArray from '../utils/shuffleArray';\nimport { PostType } from '../types';\nimport Post from '../components/Post';\n\nconst getFriendsPost = async (followedIds: number[]) => {\n  const friendsPosts = [];\n\n  try {\n    for (const friendId of followedIds) {\n      const results = await fetch(`http://localhost/users/${friendId}`, {\n        method: 'GET',\n        credentials: 'include',\n        headers,\n      });\n      const { user, posts } = await results.json();\n      const modifiedPosts = posts.map((val: PostType) => {\n        return { ...val, ...user };\n      });\n\n      friendsPosts.push(...modifiedPosts);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return shuffleArray(friendsPosts);\n};\n\nconst Home = () => {\n  const [friendsPosts, setFriendsPosts] = useState([] as any[]);\n  const userId = parseInt(localStorage.getItem('userId')!);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const followedIds = await getAllfollowed(userId);\n      const friendsPosts = await getFriendsPost(followedIds);\n\n      setFriendsPosts(friendsPosts);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"flex\">\n      <Navbar />\n      <div className=\"mx-10 my-10\">\n        <h1 className=\"\">These are posts from your friends</h1>\n\n        {friendsPosts.length >= 1 &&\n          friendsPosts.map((post) => {\n            return (\n              <Post\n                id={post.post_id}\n                avatar={post.avatar}\n                username={post.username}\n                datePosted={post.date_posted}\n                numLikes={post.num_likes}\n                caption={post.caption}\n                image={post.image}\n                comments={['hi', 'pine me', 'bro tinks hes ihi']}\n              />\n            );\n          })}\n\n        {friendsPosts.length < 1 && (\n          <h1>\n            Looks like you have no posts! Let's start by making some friends!\n          </h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}